*,::after,::before{-webkit-box-sizing:inherit;box-sizing:inherit}body,html{-webkit-box-sizing:border-box;box-sizing:border-box}body{min-height:100vh;scrollbar-width:none;scrollbar-color:#000aff transparent}ol[class],ul[class]{padding:0}blockquote,body,dd,dl,figcaption,figure,h1,h2,h3,h4,h5,h6,li,ol[class],p,ul[class]{margin:0}a{text-decoration:none;color:inherit}ol[class],ul[class]{list-style:none}img{max-width:100%;display:block}button,input,select,textarea{font:inherit}::-webkit-scrollbar{width:2px;height:2px}::-webkit-scrollbar-thumb{background:#000aff;border-radius:.5rem}::-webkit-scrollbar-track{background:0 0}.container{max-width:1728px;padding:1rem;margin:0 auto}.main{overflow:hidden;max-width:153rem}.main__inner{display:grid}body,table thead{font-family:"SFUIText-Light",sans-serif}.sidebar{background:#fff;max-width:17rem;border-radius:1.07rem;color:#53627b;padding:1.56rem 1rem 2rem 1.13rem;min-height:calc(100vmin - 2rem)}.sidebar a:active,.sidebar a:hover{color:#3d5eb4}.sidebar__content{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;height:calc(100% - 3.56rem);-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between}.sidebar__item{border:1px solid transparent;-webkit-transition:height .3s ease;transition:height .3s ease}.sidebar__item:not([data-dropdown]){margin-bottom:1.4rem}.sidebar__title{padding-left:.7rem}.sidebar__header{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between;padding-left:1.22rem;margin-bottom:1.6rem}.sidebar__header a{margin-top:-1rem}.sidebar__header .logo{width:min(100vw,73px)}.sidebar__list{font:inherit;color:#53627b}.sidebar__list li>a{width:100%}.sidebar__link{position:relative}.sidebar__link.active{color:#3d5eb4}.sidebar__link.active .arrow-down::after{border-bottom-color:#3d5eb4;-webkit-transform:rotate(-180deg);-ms-transform:rotate(-180deg);transform:rotate(-180deg)}.sidebar__link.active .sidebar__link-inner{border-bottom:1px solid #3d5eb4}.sidebar__link.active .sidebar__link-inner svg path{stroke:#3d5eb4}.sidebar__link span{padding-left:.77rem}.sidebar .arrow-down,.sidebar__link,.sidebar__link-inner,.sidebar__list li>a{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center}.sidebar .arrow-down,.sidebar__link-inner{-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;border-bottom:1px solid transparent;padding-bottom:.5rem}.sidebar .arrow-down{margin-left:auto}.sidebar .arrow-down::after{position:absolute;content:"";border-left:5px solid transparent;border-right:5px solid transparent;border-bottom:8px solid #53627b;right:0;top:calc(50% - .5rem);-webkit-transform:rotate(-145deg);-ms-transform:rotate(-145deg);transform:rotate(-145deg)}.sidebar .separator-text{display:inline-block;font-size:13px;font-weight:400;color:#99a5bb;margin-bottom:1.55rem}.sidebar .dropdown__list{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;gap:.92rem;font-size:.77rem;letter-spacing:-.02rem;padding:.5rem 0 .7rem;max-height:0;opacity:0;overflow:hidden;-webkit-transition:max-height .3s ease,opacity .3s ease;transition:max-height .3s ease,opacity .3s ease}.sidebar .dropdown__list.show{max-height:200px;opacity:1}.sidebar .dropdown__item{color:#788398;width:-webkit-fit-content;width:-moz-fit-content;width:fit-content;margin:0 auto 0 2.4rem;-webkit-transition:.3s all ease;transition:.3s all ease}.filter,.filter .date,.filter .filter-buttons{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center}.filter{background:#fff;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between;padding:.57rem .77rem;border-radius:.7rem;color:#252f40;font-size:clamp(.64rem,2vw,.8rem);margin:0 0 1.9rem;white-space:nowrap;gap:1rem}.filter .date,.filter .filter-buttons{-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;gap:.66rem}.filter #day{background:#f1f4f8;min-width:10rem;border-radius:.7rem;padding:.52rem 1.5rem;position:relative}.filter .date-switch{height:inherit;width:inherit;padding:0;border:0;background:0 0;cursor:pointer}.filter .date-switch:after{position:absolute;content:"";border-left:7px solid transparent;border-right:7px solid transparent;border-bottom:10px solid #53627b;right:.7rem;top:50%;-webkit-transform:translateY(-50%) rotate(-180deg);-ms-transform:translateY(-50%) rotate(-180deg);transform:translateY(-50%) rotate(-180deg)}.filter input#number{border:0;background:0 0;text-align:center;border-left:1px solid rgba(120,131,152,.24);border-right:1px solid rgba(120,131,152,.24)}.filter button.prev::after{left:0;right:auto;-webkit-transform:translate(50%,-50%) rotate(-90deg);-ms-transform:translate(50%,-50%) rotate(-90deg);transform:translate(50%,-50%) rotate(-90deg)}.filter button.next::after{right:0;-webkit-transform:translate(-50%,-50%) rotate(90deg);-ms-transform:translate(-50%,-50%) rotate(90deg);transform:translate(-50%,-50%) rotate(90deg)}.filter button:not(.prev,.next){display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;padding:0;border:0;background:0 0;cursor:pointer;padding:.52rem 1.5rem;background:#f1f4f8;border-radius:.7rem}.filter button:not(.prev,.next):hover{background:rgba(0,0,0,.1)}.rev,.rev__item{display:-webkit-box;display:-ms-flexbox;display:flex}.rev{gap:1.9rem;font-size:clamp(.64rem,2vw,.8rem);margin-bottom:1.9rem}.rev__item{background:#fff;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between;border-radius:1.07rem;width:100%;padding:clamp(.5rem,2.5vw,1.5rem) clamp(.7rem,2.5vw,2rem)}.rev__desc,.rev__image{-webkit-box-flex:1;-ms-flex:1;flex:1;height:100%}.rev__title{color:#252f40;font-size:clamp(1rem,4vw,1.22rem)}.rev__data{margin:clamp(1rem,4vw,3rem) auto clamp(1rem,4vw,3.5rem)}.rev .cash{margin-bottom:.4rem}.rev .cash,.rev .non-cash{position:relative;padding-left:1.3rem}.rev .cash::after,.rev .non-cash::after,.rev__button::before{content:"";position:absolute;top:50%;-webkit-transform:translateY(-50%);-ms-transform:translateY(-50%);transform:translateY(-50%)}.rev .cash::after,.rev .non-cash::after{left:0;width:1rem;height:2px}.rev .expenses .cash::after,.rev .expenses .non-cash::after,.rev .expenses button{background:#ca1f29}.rev .income .cash::after,.rev .income .non-cash::after,.rev .income button{background:#1fca45}.rev__button{padding:0;border:0;background:0 0;cursor:pointer;font-size:.92rem;color:#fff;position:relative;padding:.66rem clamp(1rem,3vw,1.6rem) .66rem clamp(2.4rem,3vw,2.9rem);border-radius:.7rem}.rev__button::before{background:url(../images/action-buttons.svg);left:1rem;width:1.07rem;height:1.07rem}.result,table{overflow-x:auto}.result{padding:1.4rem 0 1.4rem 2rem;background:#fff;border-radius:1.07rem}table{table-layout:fixed;width:auto;border-collapse:collapse;border:0}table thead{font-size:.82rem;color:#788398}table thead th:nth-child(4),table thead th:nth-child(6){width:10%}table thead th:nth-child(5){width:20%}table tbody tr td,table th{width:min(7rem,5vw);text-align:start;overflow:hidden;text-overflow:ellipsis;white-space:nowrap;padding:clamp(.8rem,2vw,1rem) .8rem clamp(.8rem,2vw,1rem) 0;color:#252f40}table tbody tr:not(:last-child){border-bottom:1px solid #e6e6e6}table tbody button{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;padding:0;border:0;background:0 0;cursor:pointer}table tbody button:hover{background:rgba(0,0,0,.1)}.anchor,.dropdown-check-list{position:relative;display:inline-block}.dropdown-check-list{min-width:13rem;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;border:1px solid rgba(148,156,172,.55);border-radius:.7rem}.anchor{padding:.64rem;width:100%;cursor:pointer}.anchor:after{position:absolute;content:"";border-left:7px solid transparent;border-right:7px solid transparent;border-bottom:10px solid #53627b;right:.7rem;top:50%;-webkit-transform:translateY(-50%) rotate(-180deg);-ms-transform:translateY(-50%) rotate(-180deg);transform:translateY(-50%) rotate(-180deg)}.anchor:active:after{-webkit-transform:rotate(135deg);-ms-transform:rotate(135deg);transform:rotate(135deg)}.dropdown-check-list ul.items{position:fixed;right:2.07rem;display:none;min-width:10rem;margin:0}.hidden__item{width:100%;height:0;border-left:0 solid transparent;border-right:0 solid transparent;border-bottom:28px solid #fff;clip-path:polygon(100% 20%,10% 100%,100% 100%);border-radius:0}.hidden__item input{opacity:0;visibility:hidden;height:0;width:0}.items__inner{background:#fff;border-radius:1.07rem;border-top-right-radius:0;-webkit-box-shadow:0 -1px 12.6px rgba(0,0,0,.15);box-shadow:0 -1px 12.6px rgba(0,0,0,.15)}.dropdown-check-list ul.items li:not(.hidden__item){font-size:1rem;list-style:none;padding:1rem}.checkbox{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center;position:relative;cursor:pointer}.checkbox input{display:none}.checkbox .text{padding-left:1.7rem;padding-right:1rem}.checkbox .checkmark{background:#2cb493;position:absolute;top:50%;left:0;-webkit-transform:translateY(-50%);-ms-transform:translateY(-50%);transform:translateY(-50%);height:1rem;width:1rem;border-radius:.2rem}.checkbox:hover .checkmark{opacity:.88}.checkbox input:checked+.checkmark:after{display:block}.checkbox .checkmark:after{content:"";position:absolute;display:none;left:50%;top:50%;width:4px;height:7px;border:solid #fff;border-width:0 2px 2px 0;-webkit-transform:translate(-50%,-70%) rotate(44deg);-ms-transform:translate(-50%,-70%) rotate(44deg);transform:translate(-50%,-70%) rotate(44deg)}body{background:#f1f4f8;display:grid;grid-template-columns:290px 1fr;font-weight:400;font-size:clamp(.7rem,2vw,.88rem);letter-spacing:.04rem;line-height:1.5;padding:1rem}@supports (-webkit-appearance:none){.rev__button::before{background-image:url(../images/action-buttons.svg)}}@media (max-width:1200px){.rev{-ms-flex-wrap:wrap;flex-wrap:wrap}.filter{margin-bottom:1.22rem;overflow:auto}}@media (max-width:992px){body{grid-template-columns:1fr}.rev{gap:1rem;margin-bottom:1rem}.sidebar{display:none}}@media (max-width:700px){body{background-color:#fff}}
/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */